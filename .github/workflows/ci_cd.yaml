name: Continuous Integration - Continuous Deployment
on:
  push:
     branches:
      - main 
  workflow_run: # Every time that Continuous Training workflow run, trigger this one
    workflows: ["Continuous Training"]
    branches: [main]  # From main 
    types:  # When finish the previous workflow
      - completed
  workflow_dispatch:
    inputs:
      reason:
        description: Why to run this?
        required: false
        default: running CI/CD
jobs:
  ci_cd:
    runs-on: ubuntu-latest
    permissions: # Set permissions to do git push
      id-token: write
      contents: write
      pull-requests: write 
      issues: read
      packages: none
    env:
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
      REGISTRY_NAME_FRONT: ${{ secrets.REGISTRY_NAME_FRONT }}
      REGION: ${{ secrets.REGION }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      SERVICE_NAME_FRONT: ${{ secrets.SERVICE_NAME_FRONT }}
      SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    steps:
      - name: Checkout Repoository
        uses: actions/checkout@v3
      - name: Set environment and bring the model
        run: |
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install dvc-gs
          export GOOGLE_APPLICATION_CREDENTIALS=$(python utilities/setter.py)
          dvc pull model/model_reg.pkl -r model-track
          dvc pull model/model_clf.pkl -r model-track
          dvc pull model/model_scaler.pkl -r model-track
          dvc pull dataset/data_prueba_limpia.csv -r dataset-track
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'
      - name: Set up GCLOUD SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
      - name: Configure Docker
        run: |
          gcloud auth configure-docker -q
      - name: Build and Push Docker
        run: |
          docker build . -t $REGISTRY_NAME:$GITHUB_SHA
          docker build frontend/. -t $REGISTRY_NAME_FRONT:$GITHUB_SHA

          sudo -u $USER docker push $REGISTRY_NAME:$GITHUB_SHA
          sudo -u $USER docker push $REGISTRY_NAME_FRONT:$GITHUB_SHA
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME --region=$REGION --image=$REGISTRY_NAME:$GITHUB_SHA
          gcloud run deploy $SERVICE_NAME_FRONT --region=$REGION --image=$REGISTRY_NAME_FRONT:$GITHUB_SHA
